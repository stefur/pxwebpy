name: ci

env:
  UV_VERSION: "0.4.9"
  UV_CACHE_DIR: /tmp/.uv-cache
  UV_LINK_MODE: copy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: python-${{ matrix.os }}
    
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python-version: ["3.9", "3.10", "3.11", "3.12"]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up uv ${{ env.UV_VERSION }}
      if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
      run: curl -LsSf https://astral.sh/uv/${{ env.UV_VERSION }}/install.sh | sh

    - name: Set up uv ${{ env.UV_VERSION }}
      if: ${{ matrix.os == 'windows-latest' }}
      run: irm https://astral.sh/uv/${{ env.UV_VERSION }}/install.ps1 | iex
      shell: powershell

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Restore uv cache
      uses: actions/cache@v4
      with:
        path: ${{ env.UV_CACHE_DIR }}
        key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          uv-${{ runner.os }}
    
    - name: Install
      run: uv sync --extra ci --no-dev --locked

    - name: Run tests & build
      run: |
        uv run pytest tests
        uv build

    - name: Minimize uv cache
      run: uv cache prune --ci